to go-to-nest
  ifelse nest != 0 [
    
    if current-time > (night-duration * 0.7) [
       ifelse any? patches in-radius 4 with [ self = [nest] of myself ] [
          set return-probability 0.8
        ] [
        ifelse any? patches in-radius 12 with [ self = [nest] of myself ] [
          set return-probability 1
        ] [
          set return-probability 0.25
        ]
      ]
       if patch-here = nest [
          set stay-in-nest true
        ]
    ]
    
    if random-float 1 <= return-probability [
      face-patch nest
      let direction decide-direction
      move-along-fencing direction
      fd speed
      set flags lput "go-to-nest-success" flags
    ] 
  ] [
    set flags lput "go-to-nest-fail" flags
  ]
end

to build-new-nest
  ifelse not member? [pcolor] of patch-here avoided-patches [
    if nest != 0 [
      ask nest [ set pcolor og-color ]
    ]
    set nest patch-here
    ask nest [ set pcolor brown ]
    set flags lput "build-nest-success" flags
  ] [
    set flags lput "build-nest-fail" flags
  ]
end