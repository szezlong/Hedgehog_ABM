;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Create sandbox world ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to setup-sandbox 
  create-light-green-patches
  create-dark-green-clusters 2
  setup-lines 3 fence 3
  setup-lines 5 street 8
  create-rectangle
  draw-random-diagonal-lines
  resize-world 0 100 0 100
  set-patch-size 3
  ask patches [
    set visit-count 0
    (ifelse
      pcolor = green [
        set environment-type one-of environment-types
      ]
      pcolor = fence [
        set food -1
      ]
      [
        set food 0
      ]
    )
    (ifelse
      environment-type = "ogrod-tylny-domu-blizniaczego" [
        set pcolor green + 1
        set food random 40 + 15
      ]
      environment-type = "ogrod-frontowy-domu-blizniaczego" [
        set pcolor green
        set food random 30 + 15
      ]
      environment-type = "ogrod-tylny-domu-wolnostojacego" [
        set pcolor green - 1
        set food random 20 + 5
      ]
      environment-type = "ogrod-frontowy-domu-wolnostojacego" [
        set pcolor green - 2
        set food random 10 + 5
      ]
    )
    set og-color pcolor
  ]
end

;;;;;;;;;;;;;;;;;;;;;;
;;; Create patches ;;;
;;;;;;;;;;;;;;;;;;;;;;

to create-light-green-patches
  ask patches [
    set pcolor green + 2
  ]
end

to create-dark-green-clusters [num]
  repeat num [
    let cluster-size random 5 + 2
    let cluster-patch one-of patches
    ask cluster-patch [
      create-dark-green-cluster cluster-size
    ]
  ]
end

to create-dark-green-cluster [cluster-size]
  ask patches in-radius cluster-size [
    set pcolor green - 1
  ]
end

to setup-lines [num col len]
  repeat num [
    let line-length random 5 + len
    let start-x random (world-width + 1)
    let start-y random (world-height + 1)
    let direction one-of [0 90]
    create-line start-x start-y direction line-length col
  ]
end

to create-line [x y direction line-length col]
  let end-x x
  let end-y y

  let shortest-distance min (list end-x end-y (world-width - end-x) (world-height - end-y))

  if shortest-distance < line-length [
    if end-x <= shortest-distance [set end-x 0]
    if end-y <= shortest-distance [set end-y 0]
    if world-width - end-x <= shortest-distance [set end-x world-width]
    if world-height - end-y <= shortest-distance [set end-y world-height]
  ]
  
  ; Rysowanie linii
  repeat line-length [
    if end-x >= 0 and end-x <= world-width and end-y >= 0 and end-y <= world-height [
      if direction = 0 [
        if end-x + 1 <= world-width [
          set end-x end-x + 1
        ]
      ]
      if direction = 90 [
        if end-y + 1 <= world-height [
          set end-y end-y + 1
        ]
      ]
      if end-x <= world-width and end-y <= world-height [       
        let target-patch patch end-x end-y
        if is-patch? target-patch [
          ask target-patch [ set pcolor col ]
        ]
      ]
    ]
  ]
end

to create-rectangle
  let left-bound -12
  let right-bound 12
  let bottom-bound -12
  let top-bound 12
  
  ask patches with [
    (pxcor >= left-bound and pxcor <= right-bound and pycor = bottom-bound) or
    (pxcor >= left-bound and pxcor <= right-bound and pycor = top-bound) or
    (pycor >= bottom-bound and pycor <= top-bound and pxcor = left-bound) or
    (pycor >= bottom-bound and pycor <= top-bound and pxcor = right-bound)
  ] [ set pcolor blue ]
end

to draw-random-diagonal-lines

  let number-of-lines 2
  let max-line-length 8
  
  repeat number-of-lines [
    let start-patch one-of patches
    ask start-patch [
      repeat number-of-lines [
        set pcolor blue
        if (patch-at 1 1 != nobody) [ ask patch-at 1 1 [ set pcolor blue ] ]
        if (patch-at 2 2 != nobody) [ ask patch-at 2 2 [ set pcolor blue ] ]
        if (patch-at 3 3 != nobody) [ ask patch-at 3 3 [ set pcolor blue ] ]
        if (patch-at 4 4 != nobody) [ ask patch-at 4 4 [ set pcolor blue ] ]
        if (patch-at 5 5 != nobody) [ ask patch-at 5 5 [ set pcolor blue ] ]
        if (patch-at 6 6 != nobody) [ ask patch-at 6 6 [ set pcolor blue ] ]
        if (patch-at 7 7 != nobody) [ ask patch-at 7 7 [ set pcolor blue ] ]
        if (patch-at 8 8 != nobody) [ ask patch-at 8 8 [ set pcolor blue ] ]
      ]
    ]
  ]
  reset-ticks
end
